<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Approvals" xml:space="preserve">
    <value>Approvals</value>
  </data>
  <data name="AuthenticationRequired" xml:space="preserve">
    <value>Authentication is required.</value>
  </data>
  <data name="ConnectedTo" xml:space="preserve">
    <value>Dear {0}. I have connected you to your team project '{2}', which is in account '{1}'.</value>
    <comment>{0} = user name; {1} = accountname; {2} = team project.</comment>
  </data>
  <data name="ConnectToAccount" xml:space="preserve">
    <value>Please select an account to connect to.</value>
  </data>
  <data name="PleaseLogin" xml:space="preserve">
    <value>Please login to Visual Studio Team Services. After login you will receive a five digit pin number, please enter the pin number.</value>
  </data>
  <data name="QueueBuild" xml:space="preserve">
    <value>Queue Build</value>
  </data>
  <data name="QueueRelease" xml:space="preserve">
    <value>QueueRelease</value>
  </data>
  <data name="WelcomeUser" xml:space="preserve">
    <value>Hi {0}. Good to see you. I will help you with your Visual Studio Team Services tasks. Please read the [MIT License]({1}) if you have not done so.</value>
    <comment>{0} = from name; {1} = link to MIT License;</comment>
  </data>
  <data name="ConnectToProject" xml:space="preserve">
    <value>Please select a project to connect to.</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>The deployment is approved.</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>The deployment is rejected.</value>
  </data>
  <data name="MissingComment" xml:space="preserve">
    <value>Please provide a comment.</value>
  </data>
  <data name="UserDataDeleted" xml:space="preserve">
    <value>Your personal user data has been deleted.</value>
  </data>
  <data name="Queue" xml:space="preserve">
    <value>Queue</value>
  </data>
  <data name="BuildQueued" xml:space="preserve">
    <value>Build with id {0} is queued.</value>
    <comment>{0} = id.</comment>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="ReleaseCreated" xml:space="preserve">
    <value>Release with id {0} is created.</value>
    <comment>{0} = id.</comment>
  </data>
  <data name="Builds" xml:space="preserve">
    <value>Builds</value>
  </data>
  <data name="Releases" xml:space="preserve">
    <value>Releases</value>
  </data>
  <data name="NoApprovals" xml:space="preserve">
    <value>There are no approvals available for you</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="NoBuilds" xml:space="preserve">
    <value>There are no builds available.</value>
  </data>
  <data name="NoReleases" xml:space="preserve">
    <value>There are no releases available.</value>
  </data>
  <data name="ErrorOccurred" xml:space="preserve">
    <value>**Error occurred:** {0}</value>
    <comment>{0} = Exception.Message</comment>
  </data>
  <data name="Help" xml:space="preserve">
    <value>I am here to help you. Please select one of the following commands.</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Sorry, I did not recognize that command. Please select one of the following commands.</value>
  </data>
  <data name="HelpAll" xml:space="preserve">
    <value>Reconnect to another account through 'connect'; Get your approvals by typing or clicking 'approvals'; With 'builds' you can queue a build; And with 'releases' you can create a release.</value>
  </data>
  <data name="HelpConnect" xml:space="preserve">
    <value>Please first 'connect' to your account, by clicking or typing connect.</value>
  </data>
  <data name="Disconnected" xml:space="preserve">
    <value>You have been Disconnected.</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Subscribe" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="SubscriptionDescription_MyApprovals" xml:space="preserve">
    <value>To be able to get your approval notifications, I have to create a web hook on your account, that pushes notifications to my service.</value>
  </data>
  <data name="SubscriptionTitle_MyApprovals" xml:space="preserve">
    <value>My approvals on {0}.</value>
    <comment>{0} = team project;</comment>
  </data>
  <data name="Unsubscribe" xml:space="preserve">
    <value>Unsubscribe</value>
  </data>
  <data name="Subscribed" xml:space="preserve">
    <value>I subscribed you to the '{0}' feed.</value>
    <comment>{0} = Subscription type</comment>
  </data>
  <data name="Unsubscribed" xml:space="preserve">
    <value>I unsubscribed you from the '{0}' feed.</value>
    <comment>{0} = Subscription type</comment>
  </data>
  <data name="PendingApproval" xml:space="preserve">
    <value>There is an approval pending.</value>
  </data>
  <data name="Subscriptions" xml:space="preserve">
    <value>Subscriptions</value>
  </data>
  <data name="WelcomeUsers" xml:space="preserve">
    <value>Hi everyone. Good to see you. I will help you with your Visual Studio Team Services tasks. Please read the [MIT License]({0}) if you have not done so.</value>
    <comment>{0} = link to MIT License;</comment>
  </data>
  <data name="SubscriptionShortTitle_MyApprovals" xml:space="preserve">
    <value>My approvals</value>
  </data>
  <data name="UnknownAccount" xml:space="preserve">
    <value>You entered an unknown account.</value>
  </data>
  <data name="HelpAccount" xml:space="preserve">
    <value>Please select an account.</value>
  </data>
  <data name="HelpPin" xml:space="preserve">
    <value>Please follow the 'authentication is required' button, which will forward you to the authorization page of Visual Studio Team Services (VSTS). When you 'accept', you will be forwarded to a page with a pin number. Please copy and paste the pin number as a reply.</value>
  </data>
  <data name="HelpProject" xml:space="preserve">
    <value>Please select a Team Project;</value>
  </data>
</root>